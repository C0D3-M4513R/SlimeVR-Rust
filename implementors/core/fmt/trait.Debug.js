(function() {var implementors = {};
implementors["slimevr_overlay"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"slimevr_overlay/client/data/enum.DecodeError.html\" title=\"enum slimevr_overlay::client::data::DecodeError\">DecodeError</a>","synthetic":false,"types":["slimevr_overlay::client::data::DecodeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/client/data/ouroboros_impl_data/struct.Data.html\" title=\"struct slimevr_overlay::client::data::ouroboros_impl_data::Data\">Data</a>","synthetic":false,"types":["slimevr_overlay::client::data::ouroboros_impl_data::Data"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/client/data/struct.FeedUpdate.html\" title=\"struct slimevr_overlay::client::data::FeedUpdate\">FeedUpdate</a>","synthetic":false,"types":["slimevr_overlay::client::data::FeedUpdate"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/client/state_machine/struct.Common.html\" title=\"struct slimevr_overlay::client::state_machine::Common\">Common</a>","synthetic":false,"types":["slimevr_overlay::client::state_machine::Common"]},{"text":"impl&lt;State:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/client/state_machine/struct.ClientStateMachine.html\" title=\"struct slimevr_overlay::client::state_machine::ClientStateMachine\">ClientStateMachine</a>&lt;State&gt;","synthetic":false,"types":["slimevr_overlay::client::state_machine::ClientStateMachine"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"slimevr_overlay/client/state_machine/enum.DeserializeError.html\" title=\"enum slimevr_overlay::client::state_machine::DeserializeError\">DeserializeError</a>","synthetic":false,"types":["slimevr_overlay::client::state_machine::DeserializeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/client/state_machine/struct.Disconnected.html\" title=\"struct slimevr_overlay::client::state_machine::Disconnected\">Disconnected</a>","synthetic":false,"types":["slimevr_overlay::client::state_machine::Disconnected"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/client/state_machine/struct.Connected.html\" title=\"struct slimevr_overlay::client::state_machine::Connected\">Connected</a>","synthetic":false,"types":["slimevr_overlay::client::state_machine::Connected"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/client/state_machine/struct.Active.html\" title=\"struct slimevr_overlay::client::state_machine::Active\">Active</a>","synthetic":false,"types":["slimevr_overlay::client::state_machine::Active"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"slimevr_overlay/client/state_machine/enum.RecvError.html\" title=\"enum slimevr_overlay::client::state_machine::RecvError\">RecvError</a>","synthetic":false,"types":["slimevr_overlay::client::state_machine::RecvError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/color/struct.RGBA.html\" title=\"struct slimevr_overlay::color::RGBA\">RGBA</a>","synthetic":false,"types":["slimevr_overlay::color::RGBA"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/model/bone/struct.Bone.html\" title=\"struct slimevr_overlay::model::bone::Bone\">Bone</a>","synthetic":false,"types":["slimevr_overlay::model::bone::Bone"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"slimevr_overlay/model/bone_kind/enum.BoneKind.html\" title=\"enum slimevr_overlay::model::bone_kind::BoneKind\">BoneKind</a>","synthetic":false,"types":["slimevr_overlay::model::bone_kind::BoneKind"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"slimevr_overlay/model/bone_map/struct.BoneMap.html\" title=\"struct slimevr_overlay::model::bone_map::BoneMap\">BoneMap</a>&lt;T&gt;","synthetic":false,"types":["slimevr_overlay::model::bone_map::BoneMap"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"slimevr_overlay/enum.ShutdownReason.html\" title=\"enum slimevr_overlay::ShutdownReason\">ShutdownReason</a>","synthetic":false,"types":["slimevr_overlay::ShutdownReason"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()